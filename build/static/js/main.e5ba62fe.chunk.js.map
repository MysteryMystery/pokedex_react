{"version":3,"sources":["lib/Cache.js","lib/PokeAPI.js","lib/PokemonTypeColourMap.js","components/lib/Badge.js","components/lib/ProgressBar.js","lib/PokemonStatColourMap.js","lib/util/StringOps.js","components/StatsPane.js","components/lib/SpriteImg.js","components/Browse.js","components/lib/Loading.js","components/lib/FlexCard.js","components/lib/MoveListPane.js","components/Show.js","App.js","reportWebVitals.js","index.js"],"names":["Cache","this","_pokemon","_pointer","instance","id","data","pokemon","getPokemon","species","undefined","url","putPokemon","getSpecies","evolution_chain","Symbol","iterator","next","done","length","value","PokeAPI","endpoint","NUMBER_OF_POKEMON","BASE_STAT_MAX","a","fetch","then","t","json","p","cache","evoChain","getEvolutionChain","j","putEvolutionChain","res","putSpecies","getInstance","PokemonTypeColourMap","type","getField","f","__types","e","normal","border","bg","fire","fighting","water","flying","grass","poison","electric","ground","psychic","rock","ice","bug","dragon","ghost","dark","steel","fairy","Badge","className","style","backgroundColor","getBG","props","borderColor","getBorder","borderWidth","children","React","Component","ProgressBar","width","fg","PokemonStatColourMap","__stats","attack","defense","hp","jump","power","skill","speed","stamina","ucfirst","string","charAt","toUpperCase","slice","StatsPane","stats","map","stat","showValue","name","base_stat","getStat","baseStatToPercentage","classes","secondary","styles","backgroundSize","backgroundRepeat","src","sprites","front_default","alt","Browse","state","expanded_pokemon","BATCH_SIZE","loadNextPokemonBatch","batchSize","api","lowerBound","i","x","push","sort","o","setState","onMouseOver","onClick","history","isSelected","SpriteImg","types","height","moves","move","Show","evo_chain","match","params","formatEvoChain","chain","getEvolutionChainFromSpecies","saved","obj","urlspl","split","pid","parseInt","evolves_to","Loading","FlexCard","Object","entries","filter","v","b","localeCompare","source","MoveListPane","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5ba62fe.chunk.js","sourcesContent":["import PokeAPI from \"./PokeAPI\";\r\n\r\nexport default class Cache {\r\n    static instance;\r\n\r\n    constructor() {\r\n        this._pokemon = []; // stores all of cached pokemon. pokemon id - 1 == arr index\r\n        this._pointer = 0;\r\n        Cache.instance = this;\r\n    }\r\n\r\n    static getInstance(){\r\n        if (this.instance === undefined)\r\n            new this();\r\n        return this.instance\r\n    }\r\n\r\n    getPokemon(id){\r\n        return this._pokemon[id - 1];\r\n    }\r\n\r\n    putPokemon(id, data){\r\n        this._pokemon[id - 1] = data;\r\n    }\r\n\r\n    getSpecies(id){\r\n        let pokemon = this.getPokemon(id);\r\n        if (pokemon && pokemon.species && pokemon.species.url === undefined)\r\n            return pokemon.species\r\n        return undefined;\r\n    }\r\n\r\n    putSpecies(id, data){\r\n        if (this.getPokemon(id) === undefined)\r\n            this.putPokemon(id, {})\r\n        let pokemon = this.getPokemon(id)\r\n        pokemon.species = data;\r\n        this.putPokemon(id, pokemon)\r\n    }\r\n\r\n    getEvolutionChain(id){\r\n        let species = this.getSpecies(id);\r\n        if ( species && species.evolution_chain && species.evolution_chain.url === undefined)\r\n            return species.evolution_chain\r\n        return undefined\r\n    }\r\n\r\n    putEvolutionChain(id, data){\r\n        let pokemon = this.getPokemon(id)\r\n        if (pokemon === undefined)\r\n            this.putPokemon(id, {species: {}})\r\n        pokemon = this.getPokemon(id);\r\n        pokemon.species.evolution_chain = data;\r\n        this.putPokemon(id, pokemon)\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this.next();\r\n    }\r\n\r\n    next() {\r\n        let done = this._pointer >= this._pokemon.length - 1;\r\n\r\n        return {\r\n            done: done,\r\n            value: this._pokemon[this._pointer++]\r\n        }\r\n    }\r\n}\r\n","import Cache from \"./Cache\";\r\n\r\nclass PokeAPI {\r\n    static instance;\r\n\r\n    constructor() {\r\n        this.endpoint = \"https://pokeapi.co/api/v2/\";\r\n        this.NUMBER_OF_POKEMON = 932;\r\n        this.BASE_STAT_MAX = 255;\r\n        PokeAPI.instance = this;\r\n    }\r\n\r\n    static getInstance(){\r\n        if (this.instance === undefined)\r\n            new this();\r\n        return this.instance\r\n    }\r\n\r\n    async getAllPokemon(){\r\n        return fetch(this.endpoint + \"pokemon/?limit=\" + this.NUMBER_OF_POKEMON)\r\n            .then(t => t.json());\r\n    }\r\n\r\n    async getPokemon(id){\r\n        let p = this.cache.getPokemon(id)\r\n        if (p === undefined){\r\n            p = fetch(this.endpoint + \"pokemon/\" + id).then(t => t.json())\r\n            this.cache.putPokemon(id, p)\r\n        }\r\n        return p;\r\n    }\r\n\r\n    async getEvolutionChainFromSpecies(id){\r\n        let species = await this.getSpecies(id)\r\n        let evoChain = this.cache.getEvolutionChain(id)\r\n        if (evoChain === undefined){\r\n            evoChain = await fetch(species.evolution_chain.url).then(j => j.json())\r\n            this.cache.putEvolutionChain(id, evoChain)\r\n        }\r\n        return evoChain\r\n    }\r\n\r\n    async getSpecies(id){\r\n        if(await this.cache.getSpecies(id) === undefined){\r\n            let res = await fetch(this.endpoint + \"pokemon-species/\" + id)\r\n                .then(t => t.json())\r\n            this.cache.putSpecies(id, res)\r\n        }\r\n        return this.cache.getSpecies(id)\r\n    }\r\n\r\n    baseStatToPercentage(value){\r\n        return (value / this.BASE_STAT_MAX) * 100\r\n    }\r\n\r\n    get cache(){\r\n        return Cache.getInstance()\r\n    }\r\n}\r\n\r\nexport default PokeAPI;\r\n","export default class PokemonTypeColourMap {\r\n    static __types = {\r\n        normal: {\r\n            border: \"#979779\",\r\n            bg: \"#a8a878\",\r\n        },\r\n        fire: {\r\n            border: \"#9c531f\",\r\n            bg: \"#f08030\"\r\n        },\r\n        fighting : {\r\n            border: \"#7d1f1a\",\r\n            bg: \"#c03028\",\r\n        },\r\n        water: {\r\n            border: \"#445e9c\",\r\n            bg: \"#6890f0\"\r\n        },\r\n        flying: {\r\n            border: \"#6d5e9c\",\r\n            bg: \"#a890f0\"\r\n        },\r\n        grass: {\r\n            bg: \"#78c850\",\r\n            border: \"#4e8234\"\r\n        },\r\n        poison: {\r\n            bg: \"#a040a0\",\r\n            border: \"#682a68\"\r\n        },\r\n        electric: {\r\n            bg: \"#f8d030\",\r\n            border:\"#a1871f\"\r\n        },\r\n        ground: {\r\n            bg: \"#e0c068\",\r\n            border: \"#968047\"\r\n        },\r\n        psychic: {\r\n            bg: \"#f85888\",\r\n            border: \"#a13959\"\r\n        },\r\n        rock: {\r\n            bg: \"#b8a038\",\r\n            border: \"#786824\"\r\n        },\r\n        ice: {\r\n            bg: \"#98d8d8\",\r\n            border: \"#638d8d\"\r\n        },\r\n        bug: {\r\n            bg: \"#a8b820\",\r\n            border: \"#6d7815\"\r\n        },\r\n        dragon: {\r\n            bg: \"#7038f8\",\r\n            border: \"#4924a1\"\r\n        },\r\n        ghost: {\r\n            bg: \"#705898\",\r\n            border: \"#493963\"\r\n        },\r\n        dark: {\r\n            bg: \"#705848\",\r\n            border: \"#49392f\"\r\n        },\r\n        steel: {\r\n            bg: \"#b8b8d0\",\r\n            border: \"#787887\"\r\n        },\r\n        fairy: {\r\n            bg: \"#ee99ac\",\r\n            border: \"#9b6470\"\r\n        },\r\n        \"???\": {\r\n            bg: \"#68a090\",\r\n            border: \"#44685e\"\r\n        }\r\n    }\r\n\r\n    static getBG(type){\r\n        return this.getField(type, \"bg\")\r\n    }\r\n\r\n    static getBorder(type){\r\n        return this.getField(type, \"border\")\r\n    }\r\n\r\n    static getField(t, f){\r\n        try {\r\n            return this.__types[t][f];\r\n        } catch (e){\r\n            return \"#fff\";\r\n        }\r\n    }\r\n}\r\n\r\nexport const getColour = type => PokemonTypeColourMap.__types[type] || {\r\n    bg: \"#fff\",\r\n    border: \"#000\"\r\n}\r\n","import React from \"react\";\r\nimport PokemonTypeColourMap from \"../../lib/PokemonTypeColourMap\";\r\n\r\nexport default class Badge extends React.Component {\r\n    render() {\r\n        return <span className={\"items-center justify-center px-2 py-1 m-1 rounded-sm text-xs font-bold border\"}\r\n                     style={{\r\n                         backgroundColor:  PokemonTypeColourMap.getBG(this.props.type),\r\n                         borderColor: PokemonTypeColourMap.getBorder(this.props.type),\r\n                         borderWidth: \"0.15rem\",\r\n                     }}\r\n        >\r\n            {this.props.children}\r\n        </span>\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ProgressBar extends React.Component {\r\n    render() {\r\n        return <div className=\"relative pt-1\">\r\n            <div className={\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-gray-700\" }\r\n                style={{backgroundColor: this.props.bg ?? \"\"}}\r\n            >\r\n                <div style={{ width: this.props.width ?? \"0%\", backgroundColor: this.props.fg }}\r\n                     className={\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center \"}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","export default class PokemonStatColourMap {\r\n    static __stats = {\r\n        attack: \"#F08030\",\r\n        defense: \"#F8D030\",\r\n        hp: \"#FF0000\",\r\n        jump: \"#39BD62\",\r\n        power: \"#FF4131\",\r\n        skill: \"#317BEE\",\r\n        \"special-attack\" : \"#6890F0\",\r\n        \"special-defense\": \"#78C850\",\r\n        speed: \"#F85888\",\r\n        stamina: \"#EECD31\"\r\n    }\r\n\r\n    static getStat(type){\r\n        return this.__stats[type] ?? \"#333\";\r\n    }\r\n}\r\n","export const ucfirst = string => string.charAt(0).toUpperCase() + string.slice(1);\r\n","import React from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport ProgressBar from \"./lib/ProgressBar\";\r\nimport PokemonStatColourMap from \"../lib/PokemonStatColourMap\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\n\r\nexport default class StatsPane extends React.Component {\r\n    render() {\r\n        let pokemon = this.props.pokemon;\r\n\r\n        return <div className={\"w-full m-1 md:m-3\"}>\r\n            { pokemon.stats.map(stat =>\r\n                <div key={stat.stat.name}>\r\n                    {this.props.showValue ? <p><span className={\"font-bold\"}>{ucfirst(stat.stat.name)}:</span> {stat.base_stat}</p> : \"\"}\r\n                    <ProgressBar\r\n                        bg=\"bg-pink-200\"\r\n                        fg={PokemonStatColourMap.getStat(stat.stat.name)}\r\n                        width={PokeAPI.getInstance().baseStatToPercentage(stat.base_stat)}\r\n                    >\r\n                    </ProgressBar>\r\n                </div>\r\n            ) }\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    let secondary = props.secondary ? true : false;\r\n\r\n    const classes = \"mx-1 shadow-inner-lg m-2 \" + (secondary ? \"bg-gray-500 rounded-3xl\" : \"bg-white rounded-full\") + \" \" + props.className\r\n    const styles = {\r\n        //backgroundImage: \"url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }\r\n\r\n    if (props.pokemon){\r\n        let p = props.pokemon;\r\n        return <img className={classes} style={styles} src={p.sprites.front_default} alt={p.name}/>\r\n    }\r\n    return <img className={classes} style={styles} src={props.url} alt={props.alt}/>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport Badge from \"./lib/Badge\";\r\nimport PokemonTypeColourMap from \"../lib/PokemonTypeColourMap\";\r\nimport StatsPane from \"./StatsPane\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport SpriteImg from \"./lib/SpriteImg\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\n\r\nexport class Browse extends React.Component {\r\n    state = {\r\n        pokemon: [],\r\n        expanded_pokemon: 0,\r\n    }\r\n    BATCH_SIZE = 50;\r\n\r\n    componentDidMount() {\r\n        this.loadNextPokemonBatch(151)\r\n    }\r\n\r\n    loadNextPokemonBatch(batchSize = this.BATCH_SIZE){\r\n        let api = PokeAPI.getInstance();\r\n        let lowerBound = this.state.pokemon.length\r\n\r\n        for (let i = lowerBound + 1; i <= lowerBound + batchSize; i++){\r\n            if (i > api.NUMBER_OF_POKEMON)\r\n                break;\r\n            api.getPokemon(i).then(x => {\r\n                this.state.pokemon.push(x);\r\n                this.state.pokemon.sort((o, t) => o.id > t.id)\r\n                this.setState(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    isSelected(pokemon) {\r\n        return pokemon.id === this.state.expanded_pokemon;\r\n    }\r\n\r\n    render() {\r\n        const {pokemon} = this.state;\r\n\r\n        return <div>\r\n            <div className=\"flex flex-wrap browse justify-center\">\r\n                { pokemon.map(p =>\r\n                    <div key={p.id}\r\n                         className={\"card shadow-inner-lg text-center bg-gray-800 hover:bg-gray-500 p-4 \" + (this.state.expanded_pokemon === p.id ? \"expanded\" : \"\" )}\r\n                         onMouseOver={ () => this.setState({expanded_pokemon: p.id})}\r\n                        //onMouseOut={ () => this.setState({expanded_pokemon: 0})}\r\n                         onClick={() => this.props.history.push(\"/show/\" + p.id)}\r\n                    >\r\n                        <div className={\"grid grid-cols-2\"}>\r\n                            <div className={!this.isSelected(p) ? \"col-span-2\" : \"\"}>\r\n                                <SpriteImg className={\"mx-auto\"} pokemon={p}/>\r\n\r\n                                <div style={{ border: \"solid 0.1rem\", borderColor: PokemonTypeColourMap.getBorder(p.types[0].type.name) }} />\r\n\r\n                                <div className=\"text-white\">{p.name[0].toUpperCase() + p.name.slice(1)}</div>\r\n                                { p.types.map(type => <Badge key={type.type.name} type={type.type.name}>\r\n                                    {ucfirst(type.type.name)}</Badge>\r\n                                ) }\r\n                            </div>\r\n                            { this.isSelected(p) ? <StatsPane pokemon={p}/> : \"\" }\r\n                        </div>\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <div className={\"text-center\"}>\r\n                <button className={\"bg-gray-200 text-gray-800 p-3 hover:shadow-inner\"}\r\n                        onClick={() => this.loadNextPokemonBatch()}\r\n                >Load More...</button>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Browse;\r\n","import * as SVGLoaders from \"svg-loaders-react\";\r\n\r\nexport default props => <div className={\"flex flex-wrap justify-center \"}>\r\n    <SVGLoaders.TailSpin height=\"50%\" width=\"50%\"/>\r\n</div>\r\n","import SpriteImg from \"./SpriteImg\";\r\nimport React from \"react\";\r\n\r\nexport default props =>\r\n    <div className={\"flex flex-wrap rounded-3xl shadow-inner-lg mb-2 \" + (props.className ?? \"bg-gray-800\")}>\r\n        {props.children}\r\n    </div>\r\n","export default props => {\r\n    let pokemon = props.pokemon\r\n\r\n    return <div className={\"m-3\"}>\r\n        { pokemon.moves.map(move => <div key={move.move.name}> {move.move.name} </div> ) }\r\n    </div>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport SpriteImg from \"./lib/SpriteImg\";\r\nimport Loading from \"./lib/Loading\";\r\nimport StatsPane from \"./StatsPane\";\r\nimport FlexCard from \"./lib/FlexCard\";\r\nimport Badge from \"./lib/Badge\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\nimport MoveListPane from \"./lib/MoveListPane\";\r\n\r\nexport class Show extends React.Component {\r\n    state = {\r\n        pokemon: undefined,\r\n        evo_chain: undefined,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pokemon = this.props.match.params.pokemon;\r\n        PokeAPI.getInstance()\r\n            .getPokemon(pokemon)\r\n            .then(pokemon => this.setState({pokemon: pokemon}))\r\n        this.formatEvoChain()\r\n            .then(chain => this.setState({evo_chain:chain}))\r\n    }\r\n\r\n    async formatEvoChain() {\r\n        let evoChain = await PokeAPI.getInstance()\r\n            .getEvolutionChainFromSpecies(this.props.match.params.pokemon)\r\n\r\n        // {sprite: \"\", \"name\" : \"\", id : 2 }\r\n        let saved = []\r\n        let obj = evoChain.chain\r\n        while (obj && obj.species){\r\n            let urlspl = obj.species.url.split(\"/\")\r\n            let pid = parseInt(urlspl[urlspl.length - 2])\r\n            let pokemon = await PokeAPI.getInstance().getPokemon(pid)\r\n\r\n            saved.push(pokemon)\r\n            obj = obj.evolves_to[0]\r\n        }\r\n\r\n        return saved;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.state.pokemon;\r\n        let evoChain = this.state.evo_chain;\r\n\r\n        if (pokemon === undefined || evoChain === undefined)\r\n            return <Loading></Loading>\r\n\r\n        return <div className={\"flex justify-center\"}>\r\n            <div className={\"w-full lg:w-5/6 shadow-inner-lg bg-gray-500 p-4\"}>\r\n                <div className={\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 md:gap-4\"}>\r\n                    <div className={\"order-first\"}>\r\n                        <FlexCard>\r\n                            <div>\r\n                                <SpriteImg pokemon={pokemon}/>\r\n                            </div>\r\n                            { Object.entries(pokemon.sprites)\r\n                                .filter(([k, v]) => v !== null && typeof v !== \"object\")\r\n                                .sort((a, b) => b[0].localeCompare(a[0]))\r\n                                .map(([name, source]) =>\r\n                                    <div key={name}>\r\n                                        <SpriteImg url={source} alt={name} secondary={true} />\r\n                                    </div>\r\n                                ) }\r\n                        </FlexCard>\r\n\r\n                        <FlexCard className={\"bg-gray-200 justify-center\"}>\r\n                            { this.state.evo_chain.map(p =>\r\n                                <div key={p.id} className={\"\"}>\r\n                                    <SpriteImg url={p.sprites.front_default} alt={p.id} secondary={true} />\r\n                                    <div className={\"mb-3\"}>\r\n                                        { p.types.map(type => <Badge key={type.type.name} type={type.type.name}>\r\n                                            {ucfirst(type.type.name)}</Badge>\r\n                                        ) }\r\n                                    </div>\r\n                                </div>\r\n                            ) }\r\n                        </FlexCard>\r\n                    </div>\r\n                    <div className={\"order-2 md:order-3\"}>\r\n                        <FlexCard>\r\n                            <StatsPane pokemon={pokemon} showValue={true}/>\r\n                        </FlexCard>\r\n                    </div>\r\n                    <div className={\"order-last\"}>\r\n                        <FlexCard>\r\n                            <MoveListPane pokemon={pokemon}/>\r\n                        </FlexCard>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Show;\r\n","\r\nimport \"./css/browse.css\"\r\nimport Browse from \"./components/Browse\";\r\nimport Show from \"./components/Show\";\r\nimport Loading from \"./components/lib/Loading\";\r\n\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter basename={\"/pokedex_react\"}>\r\n          <div className=\"App h-screen bg-black text-white overflow-auto\">\r\n             <Switch>\r\n                 <Route exact path=\"/\" component={ Browse }/>\r\n                 <Route exact path={\"/loading\"} component={Loading}/>\r\n                 <Route path=\"/show/:pokemon\" component={Show}/>\r\n             </Switch>\r\n          </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["lib/Cache.js","lib/PokeAPI.js","lib/PokemonTypeColourMap.js","components/lib/Badge.js","components/lib/ProgressBar.js","lib/PokemonStatColourMap.js","lib/util/StringOps.js","components/StatsPane.js","components/lib/SpriteImg.js","components/lib/SearchBar.js","components/lib/Loading.js","components/Browse.js","components/lib/FlexCard.js","components/lib/MoveListPane.js","components/Show.js","App.js","reportWebVitals.js","index.js"],"names":["Cache","this","STORAGE_KEY","_pokemon","instance","id","getAllPokemon","data","pokemon","getPokemon","species","undefined","url","putPokemon","getSpecies","evolution_chain","PokeAPI","endpoint","NUMBER_OF_POKEMON","BASE_STAT_MAX","a","fetch","then","t","json","p","cache","evoChain","getEvolutionChain","j","putEvolutionChain","res","putSpecies","value","getInstance","PokemonTypeColourMap","type","getField","f","__types","e","normal","border","bg","fire","fighting","water","flying","grass","poison","electric","ground","psychic","rock","ice","bug","dragon","ghost","dark","steel","fairy","Badge","className","props","style","autoGen","backgroundColor","getBG","borderColor","getBorder","borderWidth","children","React","Component","ProgressBar","width","fg","PokemonStatColourMap","__stats","attack","defense","hp","jump","power","skill","speed","stamina","ucfirst","string","charAt","toUpperCase","slice","ucwords","Array","map","s","join","split","ucHyphenatedWords","splitHyphen","StatsPane","stats","stat","showValue","name","base_stat","getStat","baseStatToPercentage","classes","secondary","styles","backgroundSize","backgroundRepeat","src","sprites","front_default","alt","SearchBar","state","suggestions","suggest","bind","event","searchTerm","target","toLowerCase","length","setState","filter","includes","onKeyUp","onClick","history","push","withRouter","height","Browse","expanded_pokemon","is_loading_pokemon","BATCH_SIZE","loadNextPokemonBatch","batchSize","api","lowerBound","me","i","x","splice","console","log","onMouseOver","isSelected","SpriteImg","types","moves","sort","b","move","version_group_details","level_learned_at","move_learn_method","Show","evo_chain","populate","prevProps","prevState","snapshot","location","match","params","formatEvoChain","chain","getEvolutionChainFromSpecies","saved","obj","urlspl","pid","parseInt","evolves_to","Loading","FlexCard","Object","entries","v","localeCompare","source","abilities","slot","ab","ability","MoveListPane","App","basename","exact","path","component","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6db68ad3.chunk.js","sourcesContent":["import PokeAPI from \"./PokeAPI\";\r\n\r\nexport default class Cache {\r\n    static instance;\r\n\r\n    constructor() {\r\n        this.STORAGE_KEY = \"pokemon\";\r\n        this._pokemon = [];\r\n        Cache.instance = this;\r\n    }\r\n\r\n    static getInstance(){\r\n        if (this.instance === undefined)\r\n            new this();\r\n        return this.instance\r\n    }\r\n\r\n    getAllPokemon(){\r\n        return this._pokemon\r\n    }\r\n\r\n    getPokemon(id){\r\n        let loaded = this.getAllPokemon()\r\n        return loaded[id - 1];\r\n    }\r\n\r\n    putPokemon(id, data){\r\n        this._pokemon[id - 1] = data;\r\n    }\r\n\r\n    getSpecies(id){\r\n        let pokemon = this.getPokemon(id);\r\n        if (pokemon && pokemon.species && pokemon.species.url === undefined)\r\n            return pokemon.species\r\n        return undefined;\r\n    }\r\n\r\n    putSpecies(id, data){\r\n        if (this.getPokemon(id) === undefined)\r\n            this.putPokemon(id, {})\r\n        let pokemon = this.getPokemon(id)\r\n        pokemon.species = data;\r\n        this.putPokemon(id, pokemon)\r\n    }\r\n\r\n    getEvolutionChain(id){\r\n        let species = this.getSpecies(id);\r\n        if ( species && species.evolution_chain && species.evolution_chain.url === undefined)\r\n            return species.evolution_chain\r\n        return undefined\r\n    }\r\n\r\n    putEvolutionChain(id, data){\r\n        let pokemon = this.getPokemon(id)\r\n        if (pokemon === undefined)\r\n            this.putPokemon(id, {species: {}})\r\n        pokemon = this.getPokemon(id);\r\n        pokemon.species.evolution_chain = data;\r\n        this.putPokemon(id, pokemon);\r\n    }\r\n}\r\n","import Cache from \"./Cache\";\r\n\r\nclass PokeAPI {\r\n    static instance;\r\n\r\n    constructor() {\r\n        this.endpoint = \"https://pokeapi.co/api/v2/\";\r\n        this.NUMBER_OF_POKEMON = 932;\r\n        this.BASE_STAT_MAX = 255;\r\n        PokeAPI.instance = this;\r\n    }\r\n\r\n    static getInstance(){\r\n        if (this.instance === undefined)\r\n            new this();\r\n        return this.instance\r\n    }\r\n\r\n    async getAllPokemon(){\r\n        return fetch(this.endpoint + \"pokemon/?limit=\" + this.NUMBER_OF_POKEMON)\r\n            .then(t => t.json());\r\n    }\r\n\r\n    async getPokemon(id){\r\n        let p = this.cache.getPokemon(id)\r\n        if (p === undefined){\r\n            p = await fetch(this.endpoint + \"pokemon/\" + id).then(t => t.json())\r\n            this.cache.putPokemon(id, p)\r\n        }\r\n        return p;\r\n    }\r\n\r\n    async getEvolutionChainFromSpecies(id){\r\n        let species = await this.getSpecies(id)\r\n        let evoChain = this.cache.getEvolutionChain(id)\r\n        if (evoChain === undefined){\r\n            evoChain = await fetch(species.evolution_chain.url).then(j => j.json())\r\n            this.cache.putEvolutionChain(id, evoChain)\r\n        }\r\n        return evoChain\r\n    }\r\n\r\n    async getSpecies(id){\r\n        if(await this.cache.getSpecies(id) === undefined){\r\n            let res = await fetch(this.endpoint + \"pokemon-species/\" + id)\r\n                .then(t => t.json())\r\n            this.cache.putSpecies(id, res)\r\n        }\r\n        return this.cache.getSpecies(id)\r\n    }\r\n\r\n    baseStatToPercentage(value){\r\n        return (value / this.BASE_STAT_MAX) * 100\r\n    }\r\n\r\n    get cache(){\r\n        return Cache.getInstance()\r\n    }\r\n}\r\n\r\nexport default PokeAPI;\r\n","export default class PokemonTypeColourMap {\r\n    static __types = {\r\n        normal: {\r\n            border: \"#979779\",\r\n            bg: \"#a8a878\",\r\n        },\r\n        fire: {\r\n            border: \"#9c531f\",\r\n            bg: \"#f08030\"\r\n        },\r\n        fighting : {\r\n            border: \"#7d1f1a\",\r\n            bg: \"#c03028\",\r\n        },\r\n        water: {\r\n            border: \"#445e9c\",\r\n            bg: \"#6890f0\"\r\n        },\r\n        flying: {\r\n            border: \"#6d5e9c\",\r\n            bg: \"#a890f0\"\r\n        },\r\n        grass: {\r\n            bg: \"#78c850\",\r\n            border: \"#4e8234\"\r\n        },\r\n        poison: {\r\n            bg: \"#a040a0\",\r\n            border: \"#682a68\"\r\n        },\r\n        electric: {\r\n            bg: \"#f8d030\",\r\n            border:\"#a1871f\"\r\n        },\r\n        ground: {\r\n            bg: \"#e0c068\",\r\n            border: \"#968047\"\r\n        },\r\n        psychic: {\r\n            bg: \"#f85888\",\r\n            border: \"#a13959\"\r\n        },\r\n        rock: {\r\n            bg: \"#b8a038\",\r\n            border: \"#786824\"\r\n        },\r\n        ice: {\r\n            bg: \"#98d8d8\",\r\n            border: \"#638d8d\"\r\n        },\r\n        bug: {\r\n            bg: \"#a8b820\",\r\n            border: \"#6d7815\"\r\n        },\r\n        dragon: {\r\n            bg: \"#7038f8\",\r\n            border: \"#4924a1\"\r\n        },\r\n        ghost: {\r\n            bg: \"#705898\",\r\n            border: \"#493963\"\r\n        },\r\n        dark: {\r\n            bg: \"#705848\",\r\n            border: \"#49392f\"\r\n        },\r\n        steel: {\r\n            bg: \"#b8b8d0\",\r\n            border: \"#787887\"\r\n        },\r\n        fairy: {\r\n            bg: \"#ee99ac\",\r\n            border: \"#9b6470\"\r\n        },\r\n        \"???\": {\r\n            bg: \"#68a090\",\r\n            border: \"#44685e\"\r\n        }\r\n    }\r\n\r\n    static getBG(type){\r\n        return this.getField(type, \"bg\")\r\n    }\r\n\r\n    static getBorder(type){\r\n        return this.getField(type, \"border\")\r\n    }\r\n\r\n    static getField(t, f){\r\n        try {\r\n            return this.__types[t][f];\r\n        } catch (e){\r\n            return \"#fff\";\r\n        }\r\n    }\r\n}\r\n\r\nexport const getColour = type => PokemonTypeColourMap.__types[type] || {\r\n    bg: \"#fff\",\r\n    border: \"#000\"\r\n}\r\n","import React from \"react\";\r\nimport PokemonTypeColourMap from \"../../lib/PokemonTypeColourMap\";\r\n\r\nexport default class Badge extends React.Component {\r\n    render() {\r\n        return <span className={\"items-center justify-center px-2 py-1 m-1 rounded-sm text-xs font-bold border \" + this.props.className}\r\n                     style={ this.props.autoGen || this.props.autoGen === undefined ? {\r\n                         backgroundColor:  PokemonTypeColourMap.getBG(this.props.type),\r\n                         borderColor: PokemonTypeColourMap.getBorder(this.props.type),\r\n                         borderWidth: \"0.15rem\",\r\n                     } : {}}\r\n        >\r\n            {this.props.children}\r\n        </span>\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ProgressBar extends React.Component {\r\n    render() {\r\n        return <div className=\"relative pt-1\">\r\n            <div className={\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-gray-700\" }\r\n                style={{backgroundColor: this.props.bg ?? \"\"}}\r\n            >\r\n                <div style={{ width: this.props.width ?? \"0%\", backgroundColor: this.props.fg }}\r\n                     className={\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center \"}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","export default class PokemonStatColourMap {\r\n    static __stats = {\r\n        attack: \"#F08030\",\r\n        defense: \"#F8D030\",\r\n        hp: \"#FF0000\",\r\n        jump: \"#39BD62\",\r\n        power: \"#FF4131\",\r\n        skill: \"#317BEE\",\r\n        \"special-attack\" : \"#6890F0\",\r\n        \"special-defense\": \"#78C850\",\r\n        speed: \"#F85888\",\r\n        stamina: \"#EECD31\"\r\n    }\r\n\r\n    static getStat(type){\r\n        return this.__stats[type] ?? \"#333\";\r\n    }\r\n}\r\n","export const ucfirst = string => string.charAt(0).toUpperCase() + string.slice(1);\r\n\r\nexport const splitHyphen = string => string.split(\"-\");\r\n\r\nexport const ucwords = string =>\r\n    string instanceof Array ?\r\n        string.map(s => ucfirst(s)).join(\" \") :\r\n        ucwords(string.split(\" \"))\r\n\r\nexport const ucHyphenatedWords = string => ucwords(splitHyphen(string));\r\n","import React from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport ProgressBar from \"./lib/ProgressBar\";\r\nimport PokemonStatColourMap from \"../lib/PokemonStatColourMap\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\n\r\nexport default class StatsPane extends React.Component {\r\n    render() {\r\n        let pokemon = this.props.pokemon;\r\n\r\n        return <div className={\"w-full m-1 md:m-3\"}>\r\n            { pokemon.stats.map(stat =>\r\n                <div key={stat.stat.name}>\r\n                    {this.props.showValue ? <p><span className={\"font-bold\"}>{ucfirst(stat.stat.name)}:</span> {stat.base_stat}</p> : \"\"}\r\n                    <ProgressBar\r\n                        bg=\"bg-pink-200\"\r\n                        fg={PokemonStatColourMap.getStat(stat.stat.name)}\r\n                        width={PokeAPI.getInstance().baseStatToPercentage(stat.base_stat)}\r\n                    >\r\n                    </ProgressBar>\r\n                </div>\r\n            ) }\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    let secondary = props.secondary ? true : false;\r\n\r\n    const classes = \"mx-1 shadow-inner-lg m-2 \" + (secondary ? \"bg-gray-500 rounded-3xl\" : \"bg-white rounded-full\") + \" \" + props.className\r\n    const styles = {\r\n        //backgroundImage: \"url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }\r\n\r\n    if (props.pokemon){\r\n        let p = props.pokemon;\r\n        return <img className={classes} style={styles} src={p.sprites.front_default} alt={p.name}/>\r\n    }\r\n    return <img className={classes} style={styles} src={props.url} alt={props.alt}/>\r\n}\r\n","import React from \"react\";\r\nimport {ucfirst} from \"../../lib/util/StringOps\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suggestions: []\r\n        }\r\n\r\n        this.suggest = this.suggest.bind(this);\r\n    }\r\n\r\n    suggest(event){\r\n        let searchTerm = event.target.value.toLowerCase();\r\n        if (searchTerm.length < 3){\r\n            this.setState({ suggestions: [] })\r\n            return\r\n        }\r\n        let s = this.props.pokemon\r\n            .filter(p => p.name.includes(searchTerm));\r\n        this.setState({ suggestions: s });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <input\r\n                className={\"text-4xl text-center h-24 w-full text-gray-700 bg-gray-400 shadow-inner-lg p-4\"}\r\n                onKeyUp={this.suggest}\r\n            />\r\n            <div className={\"flex \" + (this.state.suggestions.length > 0 ? \"mb-2\" : \"\")}>\r\n                { this.state.suggestions.map(s =>\r\n                    <div\r\n                        className={\"text-xl shadow-inner-lg bg-gray-800 hover:bg-gray-500 p-2\"}\r\n                        key={s.name}\r\n                        onClick={() => this.props.history.push(\"/show/\" + s.id)}\r\n                    >\r\n                        {ucfirst(s.name)}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBar)\r\n","import * as SVGLoaders from \"svg-loaders-react\";\r\n\r\nexport default props => <div className={\"flex flex-wrap justify-center \"}>\r\n    <SVGLoaders.TailSpin height=\"50%\" width=\"50%\"/>\r\n</div>\r\n","import React, {useState} from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport Badge from \"./lib/Badge\";\r\nimport PokemonTypeColourMap from \"../lib/PokemonTypeColourMap\";\r\nimport StatsPane from \"./StatsPane\";\r\nimport SpriteImg from \"./lib/SpriteImg\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\nimport SearchBar from \"./lib/SearchBar\";\r\nimport Loading from \"./lib/Loading\";\r\nimport * as SVGLoaders from \"svg-loaders-react\";\r\n\r\nexport class Browse extends React.Component {\r\n    state = {\r\n        pokemon: [],\r\n        expanded_pokemon: 0,\r\n        is_loading_pokemon: false,\r\n    }\r\n    BATCH_SIZE = 50;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.loadNextPokemonBatch = this.loadNextPokemonBatch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadNextPokemonBatch(151)\r\n    }\r\n\r\n    loadNextPokemonBatch(batchSize = this.BATCH_SIZE){\r\n        let api = PokeAPI.getInstance();\r\n        let lowerBound = this.state.pokemon.length;\r\n        //this.setState({is_loading_pokemon: true});\r\n        let me = this;\r\n        (async () => {\r\n            for (let i = lowerBound + 1; i <= lowerBound + batchSize; i++){\r\n                if (i > api.NUMBER_OF_POKEMON)\r\n                    break;\r\n                api.getPokemon(i).then(x => {\r\n                    //this.state.pokemon.push(x);\r\n                    //this.state.pokemon.sort((o, t) => o.id > t.id)\r\n                    me.state.pokemon.splice(i - 1, 0, x)\r\n                })\r\n            }\r\n        })().then(() => {\r\n            //me.state.is_loading_pokemon = false;\r\n            console.log(this.state)\r\n            me.setState(this.state);\r\n        })\r\n    }\r\n\r\n    isSelected(pokemon) {\r\n        return pokemon.id === this.state.expanded_pokemon;\r\n    }\r\n\r\n    render() {\r\n        const {pokemon} = this.state;\r\n\r\n        return <div>\r\n            <SearchBar pokemon={pokemon}/>\r\n            <div className=\"flex flex-wrap browse justify-center\">\r\n                { pokemon.map(p =>\r\n                    <div key={p.id}\r\n                         className={\"card shadow-inner-lg text-center bg-gray-800 hover:bg-gray-500 p-4 \" + (this.state.expanded_pokemon === p.id ? \"expanded\" : \"\" )}\r\n                         onMouseOver={ () => this.setState({expanded_pokemon: p.id})}\r\n                        //onMouseOut={ () => this.setState({expanded_pokemon: 0})}\r\n                         onClick={() => this.props.history.push(\"/show/\" + p.id)}\r\n                    >\r\n                        <div className={\"grid grid-cols-2\"}>\r\n                            <div className={!this.isSelected(p) ? \"col-span-2\" : \"\"}>\r\n                                <SpriteImg className={\"mx-auto\"} pokemon={p}/>\r\n\r\n                                <div style={{ border: \"solid 0.1rem\", borderColor: PokemonTypeColourMap.getBorder(p.types[0].type.name) }} />\r\n\r\n                                <div className=\"text-white\">{p.name[0].toUpperCase() + p.name.slice(1)}</div>\r\n                                { p.types.map(type => <Badge key={type.type.name} type={type.type.name}>\r\n                                    {ucfirst(type.type.name)}</Badge>\r\n                                ) }\r\n                            </div>\r\n                            { this.isSelected(p) ? <StatsPane pokemon={p}/> : \"\" }\r\n                        </div>\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <div className={\"text-center\"}>\r\n                <button className={\"bg-gray-200 text-gray-800 p-3 hover:shadow-inner\"}\r\n                        onClick={() => this.loadNextPokemonBatch()}\r\n                >{ this.state.is_loading_pokemon ?  <SVGLoaders.TailSpin/> : \"Load More...\"}</button>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Browse;\r\n","import SpriteImg from \"./SpriteImg\";\r\nimport React from \"react\";\r\n\r\nexport default props =>\r\n    <div className={\"flex flex-wrap rounded-3xl shadow-inner-lg mb-2 \" + (props.className ?? \"bg-gray-800\")}>\r\n        {props.children}\r\n    </div>\r\n","import {ucHyphenatedWords} from \"../../lib/util/StringOps\";\r\n\r\nexport default props => {\r\n    let pokemon = props.pokemon\r\n\r\n    return <div className={\"m-3 w-full\"}>\r\n        <div className={\"grid grid-cols-3 m-1 p-1 bg-gray-700 text-gray-700 font-bold rounded-t-md\"}>\r\n            <div className={\"mx-auto rounded-full bg-gray-200 px-2\"}>Move</div>\r\n            <div className={\"mx-auto rounded-full bg-gray-200 px-2\"}>Level</div>\r\n            <div className={\"mx-auto rounded-full bg-gray-200 px-2\"}>Learn Method</div>\r\n        </div>\r\n        { pokemon.moves\r\n            .sort((a, b) => {\r\n                if (a.move.name < b.move.name)\r\n                    return -1;\r\n                if (a.move.name > b.move.name)\r\n                    return 1;\r\n                return 0;\r\n            })\r\n            .map(\r\n                move =>\r\n                    <div key={move.move.name} className={\"grid grid-cols-3 m-1 p-1 bg-gray-700\"}>\r\n                        <div className={\"mx-auto\"}>{ucHyphenatedWords(move.move.name)}</div>\r\n                        <div className={\"mx-auto\"}>{ move.version_group_details[0].level_learned_at }</div>\r\n                        <div className={\"mx-auto\"}>{ ucHyphenatedWords(move.version_group_details[0].move_learn_method.name) }</div>\r\n                    </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport SpriteImg from \"./lib/SpriteImg\";\r\nimport Loading from \"./lib/Loading\";\r\nimport StatsPane from \"./StatsPane\";\r\nimport FlexCard from \"./lib/FlexCard\";\r\nimport Badge from \"./lib/Badge\";\r\nimport {ucfirst, ucHyphenatedWords} from \"../lib/util/StringOps\";\r\nimport MoveListPane from \"./lib/MoveListPane\";\r\n\r\nexport class Show extends React.Component {\r\n    state = {\r\n        pokemon: undefined,\r\n        evo_chain: undefined,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.populate = this.populate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populate()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const hasLocationChanged = this.props.location !== prevProps.location;\r\n        if (hasLocationChanged)\r\n            this.populate()\r\n    }\r\n\r\n    populate(){\r\n        let pokemon = this.props.match.params.pokemon;\r\n        PokeAPI.getInstance()\r\n            .getPokemon(pokemon)\r\n            .then(pokemon => this.setState({pokemon: pokemon}))\r\n        this.formatEvoChain()\r\n            .then(chain => this.setState({evo_chain:chain}))\r\n    }\r\n\r\n    async formatEvoChain() {\r\n        let evoChain = await PokeAPI.getInstance()\r\n            .getEvolutionChainFromSpecies(this.props.match.params.pokemon)\r\n\r\n        // {sprite: \"\", \"name\" : \"\", id : 2 }\r\n        let saved = []\r\n        let obj = evoChain.chain\r\n        while (obj && obj.species){\r\n            let urlspl = obj.species.url.split(\"/\")\r\n            let pid = parseInt(urlspl[urlspl.length - 2])\r\n            let pokemon = await PokeAPI.getInstance().getPokemon(pid)\r\n\r\n            saved.push(pokemon)\r\n            obj = obj.evolves_to[0]\r\n        }\r\n\r\n        return saved;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.state.pokemon;\r\n        let evoChain = this.state.evo_chain;\r\n\r\n        if (pokemon === undefined || evoChain === undefined)\r\n            return <Loading></Loading>\r\n\r\n        return <div className={\"flex justify-center\"}>\r\n            <div className={\"w-full lg:w-5/6 shadow-inner-lg bg-gray-500 p-4\"}>\r\n                <div className={\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 md:gap-4\"}>\r\n                    <div className={\"order-first\"}>\r\n                        {/* Main sprites */}\r\n                        <FlexCard>\r\n                            <div>\r\n                                <SpriteImg pokemon={pokemon}/>\r\n                            </div>\r\n                            { Object.entries(pokemon.sprites)\r\n                                .filter(([k, v]) => v !== null && typeof v !== \"object\")\r\n                                .sort((a, b) => b[0].localeCompare(a[0]))\r\n                                .map(([name, source]) =>\r\n                                    <div key={name}>\r\n                                        <SpriteImg url={source} alt={name} secondary={true} />\r\n                                    </div>\r\n                                ) }\r\n                        </FlexCard>\r\n\r\n                        {/* Evo chain */}\r\n                        <FlexCard className={\"bg-gray-200 justify-center\"}>\r\n                            { this.state.evo_chain.map(p =>\r\n                                <div key={p.id}\r\n                                     className={\"cursor-pointer\"}\r\n                                     onClick={() => this.props.history.push(\"/show/\" + p.id)}\r\n                                >\r\n                                    <SpriteImg\r\n                                        url={p.sprites.front_default}\r\n                                        alt={p.id}\r\n                                        secondary={true}\r\n                                    />\r\n                                    <div className={\"mb-3\"}>\r\n                                        { p.types.map(type => <Badge key={type.type.name} type={type.type.name}>\r\n                                            {ucfirst(type.type.name)}</Badge>\r\n                                        ) }\r\n                                    </div>\r\n                                </div>\r\n                            ) }\r\n                        </FlexCard>\r\n\r\n                        {/* Abilities */}\r\n                        <FlexCard className={\"bg-gray-200 justify-center\"}>\r\n                            { this.state.pokemon.abilities\r\n                                .sort((a, b) => {\r\n                                    return a.slot < b.slot;\r\n                                })\r\n                                .map(ab =>\r\n                                    <div key={ab.slot}\r\n                                         className={\"cursor-pointer\"}\r\n                                    >\r\n                                        <div className={\"my-3\"}>\r\n                                            <Badge className={\"bg-black\"} autoGen={false}>\r\n                                                {ucHyphenatedWords(ab.ability.name)}</Badge>\r\n                                        </div>\r\n                                    </div>\r\n                            ) }\r\n                        </FlexCard>\r\n                    </div>\r\n                    <div className={\"order-2 md:order-3\"}>\r\n                        <FlexCard>\r\n                            <StatsPane pokemon={pokemon} showValue={true}/>\r\n                        </FlexCard>\r\n                    </div>\r\n                    <div className={\"order-last\"}>\r\n                        <FlexCard>\r\n                            <MoveListPane pokemon={pokemon}/>\r\n                        </FlexCard>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Show;\r\n","\r\nimport \"./css/browse.css\"\r\nimport Browse from \"./components/Browse\";\r\nimport Show from \"./components/Show\";\r\nimport Loading from \"./components/lib/Loading\";\r\nimport Cache from \"./lib/Cache\";\r\n\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter basename={\"/pokedex_react\"}>\r\n          <div className=\"App h-screen bg-black text-white overflow-auto\">\r\n             <Switch>\r\n                 <Route exact path=\"/\" component={ Browse }/>\r\n                 <Route exact path={\"/loading\"} component={Loading}/>\r\n                 <Route exact path={\"/cache\"}>\r\n                     <ReactJson src={Cache.getInstance().getAllPokemon()} theme=\"monokai\" name={null}/>\r\n                 </Route>\r\n                 <Route path=\"/show/:pokemon\" component={Show}/>\r\n             </Switch>\r\n          </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
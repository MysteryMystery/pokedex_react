{"version":3,"sources":["lib/PokeAPI.js","lib/PokemonTypeColourMap.js","components/lib/Badge.js","components/lib/ProgressBar.js","lib/PokemonStatColourMap.js","lib/util/StringOps.js","components/StatsPane.js","components/lib/SpriteImg.js","components/Browse.js","components/lib/Loading.js","components/lib/FlexCard.js","components/lib/MoveListPane.js","components/Show.js","App.js","reportWebVitals.js","index.js"],"names":["PokeAPI","this","endpoint","NUMBER_OF_POKEMON","BASE_STAT_MAX","instance","idOrName","a","fetch","then","t","json","x","evolution_chain","url","value","undefined","PokemonTypeColourMap","type","getField","f","__types","e","normal","border","bg","fire","fighting","water","flying","grass","poison","electric","ground","psychic","rock","ice","bug","dragon","ghost","dark","steel","fairy","Badge","className","style","backgroundColor","getBG","props","borderColor","getBorder","borderWidth","children","React","Component","ProgressBar","width","fg","PokemonStatColourMap","__stats","attack","defense","hp","jump","power","skill","speed","stamina","ucfirst","string","charAt","toUpperCase","slice","StatsPane","pokemon","stats","map","stat","showValue","name","base_stat","getStat","getInstance","baseStatToPercentage","classes","secondary","styles","backgroundSize","backgroundRepeat","p","src","sprites","front_default","alt","Browse","state","expanded_pokemon","BATCH_SIZE","loadNextPokemonBatch","batchSize","api","lowerBound","length","i","getPokemon","push","sort","o","id","setState","onMouseOver","onClick","history","isSelected","SpriteImg","types","height","moves","move","Show","evo_chain","match","params","formatEvoChain","chain","getEvolutionChainFromSpecies","evoChain","saved","obj","species","evolves_to","console","log","Loading","FlexCard","Object","entries","filter","v","b","localeCompare","source","MoveListPane","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ebd5bc5.chunk.js","sourcesContent":["class PokeAPI {\r\n    static instance;\r\n\r\n    constructor() {\r\n        this.endpoint = \"https://pokeapi.co/api/v2/\";\r\n        this.NUMBER_OF_POKEMON = 932;\r\n        this.BASE_STAT_MAX = 255;\r\n        PokeAPI.instance = this;\r\n    }\r\n\r\n    static getInstance(){\r\n        if (this.instance === undefined)\r\n            new this();\r\n        return this.instance\r\n    }\r\n\r\n    async getPokemon(idOrName){\r\n        return fetch(this.endpoint + \"pokemon/\" + idOrName).then(t => t.json())\r\n    }\r\n\r\n    async getEvolutionChainFromSpecies(idOrName){\r\n        return fetch(this.endpoint + \"pokemon-species/\" + idOrName)\r\n            .then(t => t.json())\r\n            .then(x =>\r\n                fetch(x.evolution_chain.url)\r\n                    .then(t => t.json())\r\n            )\r\n    }\r\n\r\n    baseStatToPercentage(value){\r\n        return (value / this.BASE_STAT_MAX) * 100\r\n    }\r\n}\r\n\r\nexport default PokeAPI;\r\n","export default class PokemonTypeColourMap {\r\n    static __types = {\r\n        normal: {\r\n            border: \"#979779\",\r\n            bg: \"#a8a878\",\r\n        },\r\n        fire: {\r\n            border: \"#9c531f\",\r\n            bg: \"#f08030\"\r\n        },\r\n        fighting : {\r\n            border: \"#7d1f1a\",\r\n            bg: \"#c03028\",\r\n        },\r\n        water: {\r\n            border: \"#445e9c\",\r\n            bg: \"#6890f0\"\r\n        },\r\n        flying: {\r\n            border: \"#6d5e9c\",\r\n            bg: \"#a890f0\"\r\n        },\r\n        grass: {\r\n            bg: \"#78c850\",\r\n            border: \"#4e8234\"\r\n        },\r\n        poison: {\r\n            bg: \"#a040a0\",\r\n            border: \"#682a68\"\r\n        },\r\n        electric: {\r\n            bg: \"#f8d030\",\r\n            border:\"#a1871f\"\r\n        },\r\n        ground: {\r\n            bg: \"#e0c068\",\r\n            border: \"#968047\"\r\n        },\r\n        psychic: {\r\n            bg: \"#f85888\",\r\n            border: \"#a13959\"\r\n        },\r\n        rock: {\r\n            bg: \"#b8a038\",\r\n            border: \"#786824\"\r\n        },\r\n        ice: {\r\n            bg: \"#98d8d8\",\r\n            border: \"#638d8d\"\r\n        },\r\n        bug: {\r\n            bg: \"#a8b820\",\r\n            border: \"#6d7815\"\r\n        },\r\n        dragon: {\r\n            bg: \"#7038f8\",\r\n            border: \"#4924a1\"\r\n        },\r\n        ghost: {\r\n            bg: \"#705898\",\r\n            border: \"#493963\"\r\n        },\r\n        dark: {\r\n            bg: \"#705848\",\r\n            border: \"#49392f\"\r\n        },\r\n        steel: {\r\n            bg: \"#b8b8d0\",\r\n            border: \"#787887\"\r\n        },\r\n        fairy: {\r\n            bg: \"#ee99ac\",\r\n            border: \"#9b6470\"\r\n        },\r\n        \"???\": {\r\n            bg: \"#68a090\",\r\n            border: \"#44685e\"\r\n        }\r\n    }\r\n\r\n    static getBG(type){\r\n        return this.getField(type, \"bg\")\r\n    }\r\n\r\n    static getBorder(type){\r\n        return this.getField(type, \"border\")\r\n    }\r\n\r\n    static getField(t, f){\r\n        try {\r\n            return this.__types[t][f];\r\n        } catch (e){\r\n            return \"#fff\";\r\n        }\r\n    }\r\n}\r\n\r\nexport const getColour = type => PokemonTypeColourMap.__types[type] || {\r\n    bg: \"#fff\",\r\n    border: \"#000\"\r\n}\r\n","import React from \"react\";\r\nimport PokemonTypeColourMap from \"../../lib/PokemonTypeColourMap\";\r\n\r\nexport default class Badge extends React.Component {\r\n    render() {\r\n        return <span className={\"items-center justify-center px-2 py-1 m-1 rounded-sm text-xs font-bold border\"}\r\n                     style={{\r\n                         backgroundColor:  PokemonTypeColourMap.getBG(this.props.type),\r\n                         borderColor: PokemonTypeColourMap.getBorder(this.props.type),\r\n                         borderWidth: \"0.15rem\",\r\n                     }}\r\n        >\r\n            {this.props.children}\r\n        </span>\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ProgressBar extends React.Component {\r\n    render() {\r\n        return <div className=\"relative pt-1\">\r\n            <div className={\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-gray-700\" }\r\n                style={{backgroundColor: this.props.bg ?? \"\"}}\r\n            >\r\n                <div style={{ width: this.props.width ?? \"0%\", backgroundColor: this.props.fg }}\r\n                     className={\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center \"}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","export default class PokemonStatColourMap {\r\n    static __stats = {\r\n        attack: \"#F08030\",\r\n        defense: \"#F8D030\",\r\n        hp: \"#FF0000\",\r\n        jump: \"#39BD62\",\r\n        power: \"#FF4131\",\r\n        skill: \"#317BEE\",\r\n        \"special-attack\" : \"#6890F0\",\r\n        \"special-defense\": \"#78C850\",\r\n        speed: \"#F85888\",\r\n        stamina: \"#EECD31\"\r\n    }\r\n\r\n    static getStat(type){\r\n        return this.__stats[type] ?? \"#333\";\r\n    }\r\n}\r\n","export const ucfirst = string => string.charAt(0).toUpperCase() + string.slice(1);\r\n","import React from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport ProgressBar from \"./lib/ProgressBar\";\r\nimport PokemonStatColourMap from \"../lib/PokemonStatColourMap\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\n\r\nexport default class StatsPane extends React.Component {\r\n    render() {\r\n        let pokemon = this.props.pokemon;\r\n\r\n        return <div className={\"w-full m-1 md:m-3\"}>\r\n            { pokemon.stats.map(stat =>\r\n                <div key={stat.stat.name}>\r\n                    {this.props.showValue ? <p><span className={\"font-bold\"}>{ucfirst(stat.stat.name)}:</span> {stat.base_stat}</p> : \"\"}\r\n                    <ProgressBar\r\n                        bg=\"bg-pink-200\"\r\n                        fg={PokemonStatColourMap.getStat(stat.stat.name)}\r\n                        width={PokeAPI.getInstance().baseStatToPercentage(stat.base_stat)}\r\n                    >\r\n                    </ProgressBar>\r\n                </div>\r\n            ) }\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    let secondary = props.secondary ? true : false;\r\n\r\n    const classes = \"mx-1 shadow-inner-lg m-2 \" + (secondary ? \"bg-gray-500 rounded-3xl\" : \"bg-white rounded-full\") + \" \" + props.className\r\n    const styles = {\r\n        //backgroundImage: \"url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }\r\n\r\n    if (props.pokemon){\r\n        let p = props.pokemon;\r\n        return <img className={classes} style={styles} src={p.sprites.front_default} alt={p.name}/>\r\n    }\r\n    return <img className={classes} style={styles} src={props.url} alt={props.alt}/>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport Badge from \"./lib/Badge\";\r\nimport PokemonTypeColourMap from \"../lib/PokemonTypeColourMap\";\r\nimport StatsPane from \"./StatsPane\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport SpriteImg from \"./lib/SpriteImg\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\n\r\nexport class Browse extends React.Component {\r\n    state = {\r\n        pokemon: [],\r\n        expanded_pokemon: 0,\r\n    }\r\n    BATCH_SIZE = 50;\r\n\r\n    componentDidMount() {\r\n        this.loadNextPokemonBatch(151)\r\n    }\r\n\r\n    loadNextPokemonBatch(batchSize = this.BATCH_SIZE){\r\n        let api = PokeAPI.getInstance();\r\n        let lowerBound = this.state.pokemon.length\r\n\r\n        for (let i = lowerBound + 1; i <= lowerBound + batchSize; i++){\r\n            if (i > api.NUMBER_OF_POKEMON)\r\n                break;\r\n            api.getPokemon(i).then(x => {\r\n                this.state.pokemon.push(x);\r\n                this.state.pokemon.sort((o, t) => o.id > t.id)\r\n                this.setState(this.state)\r\n            })\r\n        }\r\n    }\r\n\r\n    isSelected(pokemon) {\r\n        return pokemon.id === this.state.expanded_pokemon;\r\n    }\r\n\r\n    render() {\r\n        const {pokemon} = this.state;\r\n\r\n        return <div>\r\n            <div className=\"flex flex-wrap browse justify-center\">\r\n                { pokemon.map(p =>\r\n                    <div key={p.id}\r\n                         className={\"card shadow-inner-lg text-center bg-gray-800 hover:bg-gray-500 p-4 \" + (this.state.expanded_pokemon === p.id ? \"expanded\" : \"\" )}\r\n                         onMouseOver={ () => this.setState({expanded_pokemon: p.id})}\r\n                        //onMouseOut={ () => this.setState({expanded_pokemon: 0})}\r\n                         onClick={() => this.props.history.push(\"/show/\" + p.id)}\r\n                    >\r\n                        <div className={\"grid grid-cols-2\"}>\r\n                            <div className={!this.isSelected(p) ? \"col-span-2\" : \"\"}>\r\n                                <SpriteImg className={\"mx-auto\"} pokemon={p}/>\r\n\r\n                                <div style={{ border: \"solid 0.1rem\", borderColor: PokemonTypeColourMap.getBorder(p.types[0].type.name) }} />\r\n\r\n                                <div className=\"text-white\">{p.name[0].toUpperCase() + p.name.slice(1)}</div>\r\n                                { p.types.map(type => <Badge key={type.type.name} type={type.type.name}>\r\n                                    {ucfirst(type.type.name)}</Badge>\r\n                                ) }\r\n                            </div>\r\n                            { this.isSelected(p) ? <StatsPane pokemon={p}/> : \"\" }\r\n                        </div>\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <div className={\"text-center\"}>\r\n                <button className={\"bg-gray-200 text-gray-800 p-3 hover:shadow-inner\"}\r\n                        onClick={() => this.loadNextPokemonBatch()}\r\n                >Load More...</button>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Browse;\r\n","import * as SVGLoaders from \"svg-loaders-react\";\r\n\r\nexport default props => <div className={\"flex flex-wrap justify-center \"}>\r\n    <SVGLoaders.TailSpin height=\"50%\" width=\"50%\"/>\r\n</div>\r\n","import SpriteImg from \"./SpriteImg\";\r\nimport React from \"react\";\r\n\r\nexport default props =>\r\n    <div className={\"flex flex-wrap rounded-3xl shadow-inner-lg mb-2 \" + (props.className ?? \"bg-gray-800\")}>\r\n        {props.children}\r\n    </div>\r\n","export default props => {\r\n    let pokemon = props.pokemon\r\n\r\n    return <div className={\"m-3\"}>\r\n        { pokemon.moves.map(move => <div> {move.move.name} </div> ) }\r\n    </div>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PokeAPI from \"../lib/PokeAPI\";\r\nimport SpriteImg from \"./lib/SpriteImg\";\r\nimport Loading from \"./lib/Loading\";\r\nimport StatsPane from \"./StatsPane\";\r\nimport FlexCard from \"./lib/FlexCard\";\r\nimport Badge from \"./lib/Badge\";\r\nimport {ucfirst} from \"../lib/util/StringOps\";\r\nimport MoveListPane from \"./lib/MoveListPane\";\r\n\r\nexport class Show extends React.Component {\r\n    state = {\r\n        pokemon: undefined,\r\n        evo_chain: undefined,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pokemon = this.props.match.params.pokemon;\r\n        PokeAPI.getInstance()\r\n            .getPokemon(pokemon)\r\n            .then(pokemon => this.setState({pokemon: pokemon}))\r\n        this.formatEvoChain()\r\n            .then(chain => this.setState({evo_chain:chain}))\r\n    }\r\n\r\n    async formatEvoChain() {\r\n        let evoChain = await PokeAPI.getInstance()\r\n            .getEvolutionChainFromSpecies(this.props.match.params.pokemon)\r\n\r\n        // {sprite: \"\", \"name\" : \"\", id : 2 }\r\n        let saved = []\r\n        let obj = evoChain.chain\r\n        while (obj && obj.species){\r\n            let response = await fetch(obj.species.url)\r\n            response = response.json()\r\n            let pokemon = await PokeAPI.getInstance().getPokemon(obj.species.name)\r\n\r\n            saved.push(pokemon)\r\n            obj = obj.evolves_to[0]\r\n            console.log(obj)\r\n        }\r\n\r\n        return saved;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.state.pokemon;\r\n        let evoChain = this.state.evo_chain;\r\n\r\n        if (pokemon === undefined || evoChain === undefined)\r\n            return <Loading></Loading>\r\n\r\n        return <div className={\"flex justify-center\"}>\r\n            <div className={\"w-full lg:w-5/6 shadow-inner-lg bg-gray-500 p-4\"}>\r\n                <div className={\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 md:gap-4\"}>\r\n                    <div className={\"order-first\"}>\r\n                        <FlexCard>\r\n                            <div>\r\n                                <SpriteImg pokemon={pokemon}/>\r\n                            </div>\r\n                            { Object.entries(pokemon.sprites)\r\n                                .filter(([k, v]) => v !== null && typeof v !== \"object\")\r\n                                .sort((a, b) => b[0].localeCompare(a[0]))\r\n                                .map(([name, source]) =>\r\n                                    <div key={name}>\r\n                                        <SpriteImg url={source} alt={name} secondary={true} />\r\n                                    </div>\r\n                                ) }\r\n                        </FlexCard>\r\n\r\n                        <FlexCard className={\"bg-gray-200 justify-center\"}>\r\n                            { this.state.evo_chain.map(p =>\r\n                                <div key={p.id} className={\"\"}>\r\n                                    <SpriteImg url={p.sprites.front_default} alt={p.id} secondary={true} />\r\n                                    <div className={\"mb-3\"}>\r\n                                        { p.types.map(type => <Badge key={type.type.name} type={type.type.name}>\r\n                                            {ucfirst(type.type.name)}</Badge>\r\n                                        ) }\r\n                                    </div>\r\n                                </div>\r\n                            ) }\r\n                        </FlexCard>\r\n                    </div>\r\n                    <div className={\"order-2 md:order-3\"}>\r\n                        <FlexCard>\r\n                            <StatsPane pokemon={pokemon} showValue={true}/>\r\n                        </FlexCard>\r\n                    </div>\r\n                    <div className={\"order-last\"}>\r\n                        <FlexCard>\r\n                            <MoveListPane pokemon={pokemon}/>\r\n                        </FlexCard>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Show;\r\n","\r\nimport \"./css/browse.css\"\r\nimport Browse from \"./components/Browse\";\r\nimport Show from \"./components/Show\";\r\nimport Loading from \"./components/lib/Loading\";\r\n\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter basename={\"/pokedex_react\"}>\r\n          <div className=\"App h-screen bg-black text-white overflow-auto\">\r\n             <Switch>\r\n                 <Route exact path=\"/\" component={ Browse }/>\r\n                 <Route exact path={\"/loading\"} component={Loading}/>\r\n                 <Route path=\"/show/:pokemon\" component={Show}/>\r\n             </Switch>\r\n          </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}